plugins {
    id 'java-library'
    id 'maven-publish'
    id 'com.avast.gradle.docker-compose' version '0.14.11'
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    api libs.org.springframework.boot.spring.boot.starter.data.mongodb
    api libs.org.springframework.boot.spring.boot.starter.web
    api libs.org.springframework.boot.spring.boot.starter.security
    api libs.org.springframework.boot.spring.boot.starter.actuator
    api libs.org.springframework.security.spring.security.web
    api libs.org.springframework.spring.core
    implementation 'org.springframework.boot:spring-boot-starter-validation:3.2.2'
    testImplementation libs.org.springframework.boot.spring.boot.starter.test
    testImplementation libs.org.springframework.restdocs.spring.restdocs.mockmvc
    testImplementation libs.org.springframework.boot.spring.boot.testcontainers
    testImplementation 'org.springframework.security:spring-security-test:6.2.1'

    implementation 'org.springframework.hateoas:spring-hateoas:2.2.0'
    implementation 'org.springframework.plugin:spring-plugin-core:3.0.0'
    runtimeOnly libs.org.springframework.boot.spring.boot.devtools
    implementation 'com.avast.gradle:gradle-docker-compose-plugin:0.17.6'



    api libs.org.apache.logging.log4j.log4j.core
    api libs.org.apache.logging.log4j.log4j.api

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.1'



    api libs.org.hibernate.validator.hibernate.validator


/*    api libs.org.springdoc.springdoc.openapi.ui
    api libs.org.springdoc.springdoc.openapi.data.rest*/
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'


    api libs.com.meilisearch.sdk.meilisearch.java


    api libs.com.fasterxml.jackson.datatype.jackson.datatype.jsr310
    api libs.io.jsonwebtoken.jjwt.api
    implementation 'jakarta.annotation:jakarta.annotation-api:3.0.0-M1'

    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'


    //implementation 'io.springfox:springfox-swagger2:3.0.0'
    //implementation 'io.springfox:springfox-swagger-ui:3.0.0'
    //implementation 'io.springfox:springfox-boot-starter:3.0.0'



    testImplementation libs.org.testcontainers.junit.jupiter
    api libs.org.apache.tomcat.embed.tomcat.embed.core
    testImplementation libs.org.testcontainers.mongodb

    api libs.org.mapstruct.mapstruct
    annotationProcessor('org.mapstruct:mapstruct-processor:1.4.2.Final') {
        exclude group: 'org.mapstruct', module: 'mapstruct'
    }
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
description = 'database_user'
java.sourceCompatibility = JavaVersion.VERSION_19

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}

tasks.withType(JavaCompile) {
    options.compilerArgs << '-parameters'
}

tasks.named('test', Test) {
    useJUnitPlatform()

    maxHeapSize = '1G'

    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }
}
dockerCompose {
    useComposeFiles = ['docker-compose.yaml'] // specify the Docker Compose file
    isRequiredBy(build as Task) // specify that Docker Compose is required by the test task
}
test {
    dependsOn composeUp
}
build {
    finalizedBy composeDown
}
